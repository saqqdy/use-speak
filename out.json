{
	"id": 0,
	"name": "index.md",
	"variant": "project",
	"kind": 1,
	"flags": {},
	"children": [
		{
			"id": 12,
			"name": "Effect",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 14,
					"name": "content",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "index.ts",
							"line": 33,
							"character": 1,
							"url": "https://github.com/saqqdy/use-speak/blob/dbc5b53/src/index.ts#L33"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 13,
					"name": "key",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "index.ts",
							"line": 32,
							"character": 1,
							"url": "https://github.com/saqqdy/use-speak/blob/dbc5b53/src/index.ts#L32"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "symbol"
					}
				},
				{
					"id": 15,
					"name": "utterOptions",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "index.ts",
							"line": 34,
							"character": 1,
							"url": "https://github.com/saqqdy/use-speak/blob/dbc5b53/src/index.ts#L34"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "node_modules/.pnpm/typescript@5.1.3/node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Partial"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.1.3/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Pick"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.1.3/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "SpeechSynthesisUtterance"
										},
										"name": "SpeechSynthesisUtterance",
										"package": "typescript"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "lang"
											},
											{
												"type": "literal",
												"value": "onboundary"
											},
											{
												"type": "literal",
												"value": "onend"
											},
											{
												"type": "literal",
												"value": "onerror"
											},
											{
												"type": "literal",
												"value": "onmark"
											},
											{
												"type": "literal",
												"value": "onpause"
											},
											{
												"type": "literal",
												"value": "onresume"
											},
											{
												"type": "literal",
												"value": "onstart"
											},
											{
												"type": "literal",
												"value": "pitch"
											},
											{
												"type": "literal",
												"value": "rate"
											},
											{
												"type": "literal",
												"value": "text"
											},
											{
												"type": "literal",
												"value": "voice"
											},
											{
												"type": "literal",
												"value": "volume"
											}
										]
									}
								],
								"name": "Pick",
								"package": "typescript"
							}
						],
						"name": "Partial",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						14,
						13,
						15
					]
				}
			],
			"sources": [
				{
					"fileName": "index.ts",
					"line": 31,
					"character": 17,
					"url": "https://github.com/saqqdy/use-speak/blob/dbc5b53/src/index.ts#L31"
				}
			]
		},
		{
			"id": 1,
			"name": "SpeechOptions",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 7,
					"name": "lang",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "index.ts",
							"line": 8,
							"character": 1,
							"url": "https://github.com/saqqdy/use-speak/blob/dbc5b53/src/index.ts#L8"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8,
					"name": "pitch",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "index.ts",
							"line": 9,
							"character": 1,
							"url": "https://github.com/saqqdy/use-speak/blob/dbc5b53/src/index.ts#L9"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 2,
					"name": "preferTouchEvent",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "index.ts",
							"line": 6,
							"character": 1,
							"url": "https://github.com/saqqdy/use-speak/blob/dbc5b53/src/index.ts#L6"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 9,
					"name": "rate",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "index.ts",
							"line": 10,
							"character": 1,
							"url": "https://github.com/saqqdy/use-speak/blob/dbc5b53/src/index.ts#L10"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 3,
					"name": "voiceFilter",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "index.ts",
							"line": 7,
							"character": 1,
							"url": "https://github.com/saqqdy/use-speak/blob/dbc5b53/src/index.ts#L7"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 4,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "index.ts",
											"line": 7,
											"character": 15,
											"url": "https://github.com/saqqdy/use-speak/blob/dbc5b53/src/index.ts#L7"
										}
									],
									"signatures": [
										{
											"id": 5,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "index.ts",
													"line": 7,
													"character": 15,
													"url": "https://github.com/saqqdy/use-speak/blob/dbc5b53/src/index.ts#L7"
												}
											],
											"parameters": [
												{
													"id": 6,
													"name": "voice",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "node_modules/.pnpm/typescript@5.1.3/node_modules/typescript/lib/lib.dom.d.ts",
															"qualifiedName": "SpeechSynthesisVoice"
														},
														"name": "SpeechSynthesisVoice",
														"package": "typescript"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 10,
					"name": "volume",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "index.ts",
							"line": 11,
							"character": 1,
							"url": "https://github.com/saqqdy/use-speak/blob/dbc5b53/src/index.ts#L11"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						7,
						8,
						2,
						9,
						3,
						10
					]
				}
			],
			"sources": [
				{
					"fileName": "index.ts",
					"line": 5,
					"character": 17,
					"url": "https://github.com/saqqdy/use-speak/blob/dbc5b53/src/index.ts#L5"
				}
			]
		},
		{
			"id": 11,
			"name": "UtterOptions",
			"variant": "declaration",
			"kind": 4194304,
			"flags": {},
			"sources": [
				{
					"fileName": "index.ts",
					"line": 13,
					"character": 12,
					"url": "https://github.com/saqqdy/use-speak/blob/dbc5b53/src/index.ts#L13"
				}
			],
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "node_modules/.pnpm/typescript@5.1.3/node_modules/typescript/lib/lib.es5.d.ts",
					"qualifiedName": "Partial"
				},
				"typeArguments": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "node_modules/.pnpm/typescript@5.1.3/node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Pick"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.1.3/node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "SpeechSynthesisUtterance"
								},
								"name": "SpeechSynthesisUtterance",
								"package": "typescript"
							},
							{
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "lang"
									},
									{
										"type": "literal",
										"value": "onboundary"
									},
									{
										"type": "literal",
										"value": "onend"
									},
									{
										"type": "literal",
										"value": "onerror"
									},
									{
										"type": "literal",
										"value": "onmark"
									},
									{
										"type": "literal",
										"value": "onpause"
									},
									{
										"type": "literal",
										"value": "onresume"
									},
									{
										"type": "literal",
										"value": "onstart"
									},
									{
										"type": "literal",
										"value": "pitch"
									},
									{
										"type": "literal",
										"value": "rate"
									},
									{
										"type": "literal",
										"value": "text"
									},
									{
										"type": "literal",
										"value": "voice"
									},
									{
										"type": "literal",
										"value": "volume"
									}
								]
							}
						],
						"name": "Pick",
						"package": "typescript"
					}
				],
				"name": "Partial",
				"package": "typescript"
			}
		},
		{
			"id": 16,
			"name": "default",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "index.ts",
					"line": 51,
					"character": 9,
					"url": "https://github.com/saqqdy/use-speak/blob/dbc5b53/src/index.ts#L51"
				}
			],
			"signatures": [
				{
					"id": 17,
					"name": "default",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "index.ts",
							"line": 51,
							"character": 0,
							"url": "https://github.com/saqqdy/use-speak/blob/dbc5b53/src/index.ts#L51"
						}
					],
					"parameters": [
						{
							"id": 18,
							"name": "options",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 1,
								"name": "SpeechOptions",
								"package": "use-speak"
							}
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 19,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 32,
											"name": "cancel",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "index.ts",
													"line": 207,
													"character": 2,
													"url": "https://github.com/saqqdy/use-speak/blob/dbc5b53/src/index.ts#L207"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 33,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "index.ts",
															"line": 183,
															"character": 10,
															"url": "https://github.com/saqqdy/use-speak/blob/dbc5b53/src/index.ts#L183"
														}
													],
													"signatures": [
														{
															"id": 34,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "Forced cancellation of all broadcasts, and immediate cancellation of those being broadcast"
																	}
																]
															},
															"sources": [
																{
																	"fileName": "index.ts",
																	"line": 183,
																	"character": 1,
																	"url": "https://github.com/saqqdy/use-speak/blob/dbc5b53/src/index.ts#L183"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										},
										{
											"id": 44,
											"name": "getCurrentUtter",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "index.ts",
													"line": 211,
													"character": 2,
													"url": "https://github.com/saqqdy/use-speak/blob/dbc5b53/src/index.ts#L211"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 45,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "index.ts",
															"line": 140,
															"character": 10,
															"url": "https://github.com/saqqdy/use-speak/blob/dbc5b53/src/index.ts#L140"
														}
													],
													"signatures": [
														{
															"id": 46,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "get current utter"
																	}
																],
																"blockTags": [
																	{
																		"tag": "@returns",
																		"content": [
																			{
																				"kind": "text",
																				"text": "result - utter: SpeechSynthesisUtterance"
																			}
																		]
																	}
																]
															},
															"sources": [
																{
																	"fileName": "index.ts",
																	"line": 140,
																	"character": 1,
																	"url": "https://github.com/saqqdy/use-speak/blob/dbc5b53/src/index.ts#L140"
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "node_modules/.pnpm/typescript@5.1.3/node_modules/typescript/lib/lib.dom.d.ts",
																			"qualifiedName": "SpeechSynthesisUtterance"
																		},
																		"name": "SpeechSynthesisUtterance",
																		"package": "typescript"
																	},
																	{
																		"type": "literal",
																		"value": null
																	}
																]
															}
														}
													]
												}
											}
										},
										{
											"id": 41,
											"name": "getVoice",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "index.ts",
													"line": 210,
													"character": 2,
													"url": "https://github.com/saqqdy/use-speak/blob/dbc5b53/src/index.ts#L210"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 42,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "index.ts",
															"line": 109,
															"character": 16,
															"url": "https://github.com/saqqdy/use-speak/blob/dbc5b53/src/index.ts#L109"
														}
													],
													"signatures": [
														{
															"id": 43,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "get voice"
																	}
																],
																"blockTags": [
																	{
																		"tag": "@returns",
																		"content": [
																			{
																				"kind": "text",
																				"text": "result voice: SpeechSynthesisVoice"
																			}
																		]
																	}
																]
															},
															"sources": [
																{
																	"fileName": "index.ts",
																	"line": 109,
																	"character": 1,
																	"url": "https://github.com/saqqdy/use-speak/blob/dbc5b53/src/index.ts#L109"
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "node_modules/.pnpm/typescript@5.1.3/node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "node_modules/.pnpm/typescript@5.1.3/node_modules/typescript/lib/lib.dom.d.ts",
																					"qualifiedName": "SpeechSynthesisVoice"
																				},
																				"name": "SpeechSynthesisVoice",
																				"package": "typescript"
																			},
																			{
																				"type": "intrinsic",
																				"name": "undefined"
																			}
																		]
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											}
										},
										{
											"id": 35,
											"name": "pause",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "index.ts",
													"line": 208,
													"character": 2,
													"url": "https://github.com/saqqdy/use-speak/blob/dbc5b53/src/index.ts#L208"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 36,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "index.ts",
															"line": 190,
															"character": 10,
															"url": "https://github.com/saqqdy/use-speak/blob/dbc5b53/src/index.ts#L190"
														}
													],
													"signatures": [
														{
															"id": 37,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "Suspension of all broadcasts and immediate cancellation of those being broadcast"
																	}
																]
															},
															"sources": [
																{
																	"fileName": "index.ts",
																	"line": 190,
																	"character": 1,
																	"url": "https://github.com/saqqdy/use-speak/blob/dbc5b53/src/index.ts#L190"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										},
										{
											"id": 20,
											"name": "ready",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "index.ts",
													"line": 202,
													"character": 2,
													"url": "https://github.com/saqqdy/use-speak/blob/dbc5b53/src/index.ts#L202"
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/@vue+reactivity@3.3.4/node_modules/@vue/reactivity/dist/reactivity.d.ts",
													"qualifiedName": "Ref"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "boolean"
													}
												],
												"name": "Ref",
												"package": "@vue/reactivity"
											}
										},
										{
											"id": 28,
											"name": "remove",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "index.ts",
													"line": 206,
													"character": 2,
													"url": "https://github.com/saqqdy/use-speak/blob/dbc5b53/src/index.ts#L206"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 29,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "index.ts",
															"line": 169,
															"character": 10,
															"url": "https://github.com/saqqdy/use-speak/blob/dbc5b53/src/index.ts#L169"
														}
													],
													"signatures": [
														{
															"id": 30,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "Remove unconsumed speak"
																	}
																],
																"blockTags": [
																	{
																		"tag": "@returns",
																		"content": [
																			{
																				"kind": "text",
																				"text": "result - cancellation result true=Cancellation success false=Broadcast content not found or broadcast consumed"
																			}
																		]
																	}
																]
															},
															"sources": [
																{
																	"fileName": "index.ts",
																	"line": 169,
																	"character": 1,
																	"url": "https://github.com/saqqdy/use-speak/blob/dbc5b53/src/index.ts#L169"
																}
															],
															"parameters": [
																{
																	"id": 31,
																	"name": "effectKey",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "key of effect"
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "symbol"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															}
														}
													]
												}
											}
										},
										{
											"id": 38,
											"name": "resume",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "index.ts",
													"line": 209,
													"character": 2,
													"url": "https://github.com/saqqdy/use-speak/blob/dbc5b53/src/index.ts#L209"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 39,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "index.ts",
															"line": 197,
															"character": 10,
															"url": "https://github.com/saqqdy/use-speak/blob/dbc5b53/src/index.ts#L197"
														}
													],
													"signatures": [
														{
															"id": 40,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "Resume all broadcasts and immediately cancel those being broadcast"
																	}
																]
															},
															"sources": [
																{
																	"fileName": "index.ts",
																	"line": 197,
																	"character": 1,
																	"url": "https://github.com/saqqdy/use-speak/blob/dbc5b53/src/index.ts#L197"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										},
										{
											"id": 23,
											"name": "speak",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "index.ts",
													"line": 205,
													"character": 2,
													"url": "https://github.com/saqqdy/use-speak/blob/dbc5b53/src/index.ts#L205"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 24,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "index.ts",
															"line": 152,
															"character": 10,
															"url": "https://github.com/saqqdy/use-speak/blob/dbc5b53/src/index.ts#L152"
														}
													],
													"signatures": [
														{
															"id": 25,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "speak"
																	}
																],
																"blockTags": [
																	{
																		"tag": "@returns",
																		"content": [
																			{
																				"kind": "text",
																				"text": "result - effectKey: symbol"
																			}
																		]
																	}
																]
															},
															"sources": [
																{
																	"fileName": "index.ts",
																	"line": 152,
																	"character": 1,
																	"url": "https://github.com/saqqdy/use-speak/blob/dbc5b53/src/index.ts#L152"
																}
															],
															"parameters": [
																{
																	"id": 26,
																	"name": "content",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "speak text"
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 27,
																	"name": "utterOptions",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "utter options: UtterOptions"
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "node_modules/.pnpm/typescript@5.1.3/node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "Partial"
																		},
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "node_modules/.pnpm/typescript@5.1.3/node_modules/typescript/lib/lib.es5.d.ts",
																					"qualifiedName": "Pick"
																				},
																				"typeArguments": [
																					{
																						"type": "reference",
																						"target": {
																							"sourceFileName": "node_modules/.pnpm/typescript@5.1.3/node_modules/typescript/lib/lib.dom.d.ts",
																							"qualifiedName": "SpeechSynthesisUtterance"
																						},
																						"name": "SpeechSynthesisUtterance",
																						"package": "typescript"
																					},
																					{
																						"type": "union",
																						"types": [
																							{
																								"type": "literal",
																								"value": "lang"
																							},
																							{
																								"type": "literal",
																								"value": "onboundary"
																							},
																							{
																								"type": "literal",
																								"value": "onend"
																							},
																							{
																								"type": "literal",
																								"value": "onerror"
																							},
																							{
																								"type": "literal",
																								"value": "onmark"
																							},
																							{
																								"type": "literal",
																								"value": "onpause"
																							},
																							{
																								"type": "literal",
																								"value": "onresume"
																							},
																							{
																								"type": "literal",
																								"value": "onstart"
																							},
																							{
																								"type": "literal",
																								"value": "pitch"
																							},
																							{
																								"type": "literal",
																								"value": "rate"
																							},
																							{
																								"type": "literal",
																								"value": "text"
																							},
																							{
																								"type": "literal",
																								"value": "voice"
																							},
																							{
																								"type": "literal",
																								"value": "volume"
																							}
																						]
																					}
																				],
																				"name": "Pick",
																				"package": "typescript"
																			}
																		],
																		"name": "Partial",
																		"package": "typescript"
																	},
																	"defaultValue": "{}"
																}
															],
															"type": {
																"type": "indexedAccess",
																"indexType": {
																	"type": "literal",
																	"value": "key"
																},
																"objectType": {
																	"type": "reference",
																	"target": 12,
																	"name": "Effect",
																	"package": "use-speak"
																}
															}
														}
													]
												}
											}
										},
										{
											"id": 22,
											"name": "speech",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "index.ts",
													"line": 204,
													"character": 2,
													"url": "https://github.com/saqqdy/use-speak/blob/dbc5b53/src/index.ts#L204"
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/typescript@5.1.3/node_modules/typescript/lib/lib.dom.d.ts",
													"qualifiedName": "SpeechSynthesis"
												},
												"name": "SpeechSynthesis",
												"package": "typescript"
											}
										},
										{
											"id": 21,
											"name": "voice",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "index.ts",
													"line": 203,
													"character": 2,
													"url": "https://github.com/saqqdy/use-speak/blob/dbc5b53/src/index.ts#L203"
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/@vue+reactivity@3.3.4/node_modules/@vue/reactivity/dist/reactivity.d.ts",
													"qualifiedName": "ShallowRef"
												},
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "node_modules/.pnpm/typescript@5.1.3/node_modules/typescript/lib/lib.dom.d.ts",
																	"qualifiedName": "SpeechSynthesisVoice"
																},
																"name": "SpeechSynthesisVoice",
																"package": "typescript"
															}
														]
													}
												],
												"name": "ShallowRef",
												"package": "@vue/reactivity"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												32,
												44,
												41,
												35,
												20,
												28,
												38,
												23,
												22,
												21
											]
										}
									],
									"sources": [
										{
											"fileName": "index.ts",
											"line": 201,
											"character": 8,
											"url": "https://github.com/saqqdy/use-speak/blob/dbc5b53/src/index.ts#L201"
										}
									]
								}
							}
						]
					}
				}
			]
		}
	],
	"groups": [
		{
			"title": "Interfaces",
			"children": [
				12,
				1
			]
		},
		{
			"title": "Type Aliases",
			"children": [
				11
			]
		},
		{
			"title": "Functions",
			"children": [
				16
			]
		}
	],
	"packageName": "use-speak",
	"packageVersion": "1.2.0",
	"readme": [
		{
			"kind": "text",
			"text": "<div style=\"text-align: center;\" align=\"center\">\n\n# use-speak\n\nA composition api for SpeechSynthesis, supports vue2.0 and vue3.0\n\n[![NPM version][npm-image]][npm-url]\n[![Codacy Badge][codacy-image]][codacy-url]\n[![Test coverage][codecov-image]][codecov-url]\n[![npm download][download-image]][download-url]\n[![License][license-image]][license-url]\n\n[![Sonar][sonar-image]][sonar-url]\n\n</div>\n\n<div style=\"text-align: center; margin-bottom: 20px;\" align=\"center\">\n\n### **[Documentation](https://www.saqqdy.com/use-speak)** • **[Change Log](./CHANGELOG.md)**\n\n</div>\n\n## Installing\n\n"
		},
		{
			"kind": "code",
			"text": "```bash\n# use pnpm\n$ pnpm install use-speak\n\n# use npm\n$ npm install use-speak --save\n\n# use yarn\n$ yarn add use-speak\n```"
		},
		{
			"kind": "text",
			"text": "\n\n## Usage\n\n### Use in Vue "
		},
		{
			"kind": "code",
			"text": "`>=3.0`"
		},
		{
			"kind": "text",
			"text": "\n\n"
		},
		{
			"kind": "code",
			"text": "```vue\n<script setup>\nimport { getCurrentInstance, onMounted } from 'vue'\nimport useSpeak from 'use-speak'\n\nconst speaker = useSpeak({ lang: 'zh_CN' })\n\nonMounted(() => {\n  speaker.speak('new bee')\n})\n\nuseExpose({ speaker })\n</script>\n```"
		},
		{
			"kind": "text",
			"text": "\n\n### Use in Vue "
		},
		{
			"kind": "code",
			"text": "`2.7`"
		},
		{
			"kind": "text",
			"text": "\n\n"
		},
		{
			"kind": "code",
			"text": "```vue\n<script>\nimport useSpeak from 'use-speak'\n\nexport default {\n  setup() {\n    const speaker = useSpeak({ lang: 'zh_CN' })\n    speaker.speak('new bee')\n\n    return { speaker }\n  }\n}\n</script>\n```"
		},
		{
			"kind": "text",
			"text": "\n\n### Use in Vue "
		},
		{
			"kind": "code",
			"text": "`<=2.6`"
		},
		{
			"kind": "text",
			"text": "\n\n> Add "
		},
		{
			"kind": "code",
			"text": "`@vue/composition-api`"
		},
		{
			"kind": "text",
			"text": " to the "
		},
		{
			"kind": "code",
			"text": "`project.json`"
		},
		{
			"kind": "text",
			"text": " dependencies and run install.\n\n"
		},
		{
			"kind": "code",
			"text": "```json\n{\n  \"dependencies\": {\n    \"@vue/composition-api\": \"latest\"\n  }\n}\n```"
		},
		{
			"kind": "text",
			"text": "\n\n"
		},
		{
			"kind": "code",
			"text": "```js\n// main.js\nimport Vue from 'vue'\nimport VueCompositionApi from '@vue/composition-api'\n\nVue.use(VueCompositionApi)\n\nnew Vue({}).$mount('#app')\n```"
		},
		{
			"kind": "text",
			"text": "\n\n"
		},
		{
			"kind": "code",
			"text": "```vue\n<script>\nimport useSpeak from 'use-speak'\n\nexport default {\n  setup() {\n    const speaker = useSpeak({ lang: 'zh_CN' })\n    speaker.speak('new bee')\n\n    return { speaker }\n  }\n}\n</script>\n```"
		},
		{
			"kind": "text",
			"text": "\n\n### Using unpkg CDN\n\n"
		},
		{
			"kind": "code",
			"text": "```html\n<!-- Add script tags to your html code, using CDN links to bring in -->\n<script src=\"https://unpkg.com/use-speak@1.1.0/dist/index.global.prod.js\"></script>\n```"
		},
		{
			"kind": "text",
			"text": "\n\n## Support & Issues\n\nPlease open an issue [here](https://github.com/saqqdy/use-speak/issues).\n\n## License\n\n[MIT](LICENSE)\n\n[npm-image]: https://img.shields.io/npm/v/use-speak.svg?style=flat-square\n[npm-url]: https://npmjs.org/package/use-speak\n[codacy-image]: https://app.codacy.com/project/badge/Grade/f70d4880e4ad4f40aa970eb9ee9d0696\n[codacy-url]: https://www.codacy.com/gh/saqqdy/use-speak/dashboard?utm_source=github.com&utm_medium=referral&utm_content=saqqdy/use-speak&utm_campaign=Badge_Grade\n[codecov-image]: https://img.shields.io/codecov/c/github/saqqdy/use-speak.svg?style=flat-square\n[codecov-url]: https://codecov.io/github/saqqdy/use-speak?branch=master\n[download-image]: https://img.shields.io/npm/dm/use-speak.svg?style=flat-square\n[download-url]: https://npmjs.org/package/use-speak\n[license-image]: https://img.shields.io/badge/License-MIT-blue.svg\n[license-url]: LICENSE\n[sonar-image]: https://sonarcloud.io/api/project_badges/quality_gate?project=saqqdy_use-speak\n[sonar-url]: https://sonarcloud.io/dashboard?id=saqqdy_use-speak"
		}
	],
	"symbolIdMap": {
		"0": {
			"sourceFileName": "src/index.ts",
			"qualifiedName": ""
		},
		"1": {
			"sourceFileName": "src/index.ts",
			"qualifiedName": "SpeechOptions"
		},
		"2": {
			"sourceFileName": "src/index.ts",
			"qualifiedName": "SpeechOptions.preferTouchEvent"
		},
		"3": {
			"sourceFileName": "src/index.ts",
			"qualifiedName": "SpeechOptions.voiceFilter"
		},
		"4": {
			"sourceFileName": "src/index.ts",
			"qualifiedName": "__type"
		},
		"5": {
			"sourceFileName": "src/index.ts",
			"qualifiedName": "__type"
		},
		"6": {
			"sourceFileName": "src/index.ts",
			"qualifiedName": "voice"
		},
		"7": {
			"sourceFileName": "src/index.ts",
			"qualifiedName": "SpeechOptions.lang"
		},
		"8": {
			"sourceFileName": "src/index.ts",
			"qualifiedName": "SpeechOptions.pitch"
		},
		"9": {
			"sourceFileName": "src/index.ts",
			"qualifiedName": "SpeechOptions.rate"
		},
		"10": {
			"sourceFileName": "src/index.ts",
			"qualifiedName": "SpeechOptions.volume"
		},
		"11": {
			"sourceFileName": "src/index.ts",
			"qualifiedName": "UtterOptions"
		},
		"12": {
			"sourceFileName": "src/index.ts",
			"qualifiedName": "Effect"
		},
		"13": {
			"sourceFileName": "src/index.ts",
			"qualifiedName": "Effect.key"
		},
		"14": {
			"sourceFileName": "src/index.ts",
			"qualifiedName": "Effect.content"
		},
		"15": {
			"sourceFileName": "src/index.ts",
			"qualifiedName": "Effect.utterOptions"
		},
		"16": {
			"sourceFileName": "src/index.ts",
			"qualifiedName": "useSpeak"
		},
		"17": {
			"sourceFileName": "src/index.ts",
			"qualifiedName": "useSpeak"
		},
		"18": {
			"sourceFileName": "src/index.ts",
			"qualifiedName": "options"
		},
		"19": {
			"sourceFileName": "src/index.ts",
			"qualifiedName": "__object"
		},
		"20": {
			"sourceFileName": "src/index.ts",
			"qualifiedName": "__object.ready"
		},
		"21": {
			"sourceFileName": "src/index.ts",
			"qualifiedName": "__object.voice"
		},
		"22": {
			"sourceFileName": "src/index.ts",
			"qualifiedName": "__object.speech"
		},
		"23": {
			"sourceFileName": "src/index.ts",
			"qualifiedName": "__object.speak"
		},
		"24": {
			"sourceFileName": "src/index.ts",
			"qualifiedName": "speak"
		},
		"25": {
			"sourceFileName": "src/index.ts",
			"qualifiedName": "speak"
		},
		"26": {
			"sourceFileName": "src/index.ts",
			"qualifiedName": "content"
		},
		"27": {
			"sourceFileName": "src/index.ts",
			"qualifiedName": "utterOptions"
		},
		"28": {
			"sourceFileName": "src/index.ts",
			"qualifiedName": "__object.remove"
		},
		"29": {
			"sourceFileName": "src/index.ts",
			"qualifiedName": "remove"
		},
		"30": {
			"sourceFileName": "src/index.ts",
			"qualifiedName": "remove"
		},
		"31": {
			"sourceFileName": "src/index.ts",
			"qualifiedName": "effectKey"
		},
		"32": {
			"sourceFileName": "src/index.ts",
			"qualifiedName": "__object.cancel"
		},
		"33": {
			"sourceFileName": "src/index.ts",
			"qualifiedName": "cancel"
		},
		"34": {
			"sourceFileName": "src/index.ts",
			"qualifiedName": "cancel"
		},
		"35": {
			"sourceFileName": "src/index.ts",
			"qualifiedName": "__object.pause"
		},
		"36": {
			"sourceFileName": "src/index.ts",
			"qualifiedName": "pause"
		},
		"37": {
			"sourceFileName": "src/index.ts",
			"qualifiedName": "pause"
		},
		"38": {
			"sourceFileName": "src/index.ts",
			"qualifiedName": "__object.resume"
		},
		"39": {
			"sourceFileName": "src/index.ts",
			"qualifiedName": "resume"
		},
		"40": {
			"sourceFileName": "src/index.ts",
			"qualifiedName": "resume"
		},
		"41": {
			"sourceFileName": "src/index.ts",
			"qualifiedName": "__object.getVoice"
		},
		"42": {
			"sourceFileName": "src/index.ts",
			"qualifiedName": "getVoice"
		},
		"43": {
			"sourceFileName": "src/index.ts",
			"qualifiedName": "getVoice"
		},
		"44": {
			"sourceFileName": "src/index.ts",
			"qualifiedName": "__object.getCurrentUtter"
		},
		"45": {
			"sourceFileName": "src/index.ts",
			"qualifiedName": "getCurrentUtter"
		},
		"46": {
			"sourceFileName": "src/index.ts",
			"qualifiedName": "getCurrentUtter"
		}
	}
}